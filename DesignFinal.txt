
# For this function I actaully went back to the basics of just asking the user to input sport type and return it as a menu
# and lower case value
# This is the menu function where someone originally puts in there choice for where the function will go to #
Function Name: menu
Parameters: None
Return: menu_choice
Algorithm:
1. Ask user to choose: menu_choice variable("Please enter a valid sport type: football, quidditch, gymnast")
2. Return menu_choice as a lower value


# I actually did not even have this in my original algorithim or code, I added it once I realized my mistake #
Function Name: int_check
Parameters: value
Return: Interger value
Algorithm:
1. While not value.is digit
    a. Output: ("Error! Not an integer!")
    b. Repeat step 1, prompting user to input integer.
3. Typecast value to an int
4. Return value


# I changed a lot here: I made each input a different line of code, i checked my inputs to make sure they are ints, I fixed
# my equation, and I fixed my return to only return football and not just a calculation
# This is the function for if the user types in football from menu #
Function Name: football
Parameters: interceptions, completions, attempts, passing_yards, touchdown_passes
Return: football_score
Algorithm:
1. Ask user to input interceptions: ("Please enter your number of interceptions made.")
2. Call int_check to check for valid interger,
3. Make interception into new correct value
4. Ask user to input completions: ("Please enter your number of completions made.")
5. Call int_check to check for valid interger
6. Make completions into new correct value
7. Ask user to input attempts: ("Please enter your number of attempts made.")
8. Call int_check to check for valid interger
9. Make attempts into new correct value
10. Ask user to input passing_yards: ("Please enter your number of passing yards made.")
11. Call int_check to check for valid interger
12. Make passing_yards into new correct value
13. Ask user to input touchdown_passes: ("Please enter your number of touchdown passes made.")
14. Call int_check to check for valid interger
15. Make touchdown_passes into new correct value
16. Calculate football_score: ("100 * [5(completions/attempts – 0.3) + 0.25(passing_yards/attempts-3) +
  20(touchdown_passes/attempts) + 2.375 – (25 * interceptions/attempts)]/6")
17. Return football_score


# I made goals a serperate line of code, then I later on asked if there was a snitch caught and if that happened i would
# either add 30 or nothing points, I also added error checking and fixed the return values.
# This is the function for if the user types in quidditch from menu #
Function Name: quidditch
Parameters: goal, snitch
Return: quidditch_score
Algorithm:
1. Ask user to input goals: ("Please enter your number of goals made.")
2. Call int_check to check for valid interger
3. Make goals into new correct value
4. Calculate quidditch_score: "(10(goal)"
5. Ask user to input snitch: ("Did you catch the golden snitch? yes or no?")
6. If snitch is equal to "yes"
    a. Add 30 to quidditch_score
7. Otherwise/If snitch is equal to "no"
    a. Add 0 to quidditch_score
8. Otherwise:
    a. Output: ("Error! Invalid Answer.")
    b. Go back to step 5, prompting user to input yes or no
9. Return quidditch_score


# I made every input a separate line of code, use calculations for min and max, and fixed return value
# This is the function for if the user types in gymnast from menu #
Function Name: gymnast
Parameters: difficulty, execution1, execution2, execution3, execution4, execution5
Return: Calculation of Parameters
Algorithm:
1. Ask user to input difficulty: ("Please enter difficulty score.")
2. Call execution1 function: ("Please enter execution1 score."))
3. Call execution2 function: ("Please enter execution2 score."))
4. Call execution3 function: ("Please enter execution3 score."))
5. Call execution4 function: ("Please enter execution4 score."))
6. Call execution5 function: ("Please enter execution5 score."))
7. Call for calculate_min value for calculation, name it minimum
8. Call for calculate_max value for calculation, name it maximum
9. Calculate average_executions: "((execution1 + execution2 + execution3 + execution4 + execution5) - (min_value +
max_value)) / 5 "
10. Calculate_Gym = "(difficulty) + (average_executions)"
11. Return Calculation_Gym


# This function did not originally exist because I honestly just forgot about it, I finally fixed it. #
Function Name: calculate_min
Parameters: execuation1, execuation2, execuation3, execuation4, execuation5
Return: min_value
Algorithm:
1. Set min_value to execuation1
2. If execuation2 is less than min_value:
    a. Set min_value to execuation2
3. If execuation3 is less than min_value:
    a. Set min_value to execuation3
4. If execuation4 is less than min_value:
    a. Set min_value to execuation4
5. If execuation5 is less than min_value:
    a. Set min_value to execuation5
6. Return min_value

# This function did not originally exist because I honestly just forgot about it, I finally fixed it. #
Function Name: calculate_max
Parameters: execuation1, execuation2, execuation3, execuation4, execuation5
Return: max_value
Algorithm:
1. Set max_value to execuation1
2. If execuation2 is greater than max_value:
    a. Set max_value to execuation2
3. If execuation3 is greater than max_value:
    a. Set max_value to execuation3
4. If execuation4 is greater than max_value:
    a. Set max_value to execuation4
5. If execuation5 is greater than max_value:
    a. Set max_value to execuation5
6. Return max_value


# I basically updated all of the main function because I had to fix everything else.
Function Name: Main
Parameters: None
Return: None
Algorithm:
1. Tell the user the purpose of the program: "This program will calculate various sports statistics for the user, based
on the user’s choice of sport."
2. Call menu_choice from menu
3. If menu_choice.lower is equal to "football":
    a. Call football from football_QB
    b. Output: ("Your football QB rating is", football_score)
    c. If football_score is greater than or equal to 158.3
        i. Output: "You are a perfect passer."
    d. Otherwise:
        a. Output: "Sorry, you are not considered a perfect passer."
4. Otherwise/If menu_choice is equal to "quidditch":
    a. Call quidditch from quidditch_q
    b. Output: ("Your score for Quidditch is", quidditch_score)
5. Otherwise:
    a. Call gymnast from gymnast_gym
    b. Output: ("Your final score is", Calculation_Gym)
6. Output: "Thank you for using this program."


## Run the Program ##
main()



